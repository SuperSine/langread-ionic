# The `Date` scalar type
scalar Date

# The `DateTime` scalar type
scalar DateTime

# The `DateTimeOffset` scalar type
scalar DateTimeOffset

# The `Seconds` scalar type
scalar Seconds

# The `Milliseconds` scalar type
scalar Milliseconds

scalar Decimal

scalar Uri

scalar Guid

scalar Short

scalar UShort

scalar UInt

scalar Long

scalar BigInt

scalar ULong

scalar Byte

scalar SByte

type Query {
  auth: Auth
  token: Token
}

type Token {
  get(appId: String = null, appSecret: String = null): String
}

type Auth {
  auth(email: String!, password: String!): UserType
  email(email: String!): Boolean
  profile(appId: String!, appSecret: String!): ProfileType
  sendauthcode(email: String!): Boolean
  sendreset(appId: String = null, appSecret: String = null): Boolean
  sendverify(appId: String = null, appSecret: String = null): Boolean
  username(username: String!): Boolean
}

type ProfileType {
  displayLanguage: String
  email: String!
  emailConfirmed: Boolean!
  firstName: String
  lastName: String
  phoneNumber: String
  sourceLanguage: String
  targetLanguage: String
  userName: String!
}

type UserType {
  appId: String!
  appSecret: String!
  displayLanguage: String!
  email: String!
  emailConfirmed: Boolean!
  firstName: String
  lastName: String
  phoneNumber: String
  sourceLanguage: String!
  targetLanguage: String!
  token: String
  userName: String!
}

type Mutation {
  secret: Secret
  user: User
}

type Secret {
  update(email: String!, password: String!): UserType
}

type User {
  email(
    appId: String = null
    appSecret: String = null
    email: String = null
  ): UserType
  password(
    appId: String = null
    appSecret: String = null
    token: String = null
    password: String = null
  ): Boolean
  register(
    email: String!
    phonenumber: String = null
    password: String = null
    username: String = null
    firstname: String = null
    lastname: String = null
    displayLanguage: String = null
    sourceLanguage: String = null
    targetLanguage: String = null
  ): UserType
  update(
    appId: String = null
    appSecret: String = null
    user: UpdateUserViewModelType = null
  ): UserType
  verify(email: String!, code: String!, purpose: TokenPurpose = null): UserType
}

input UpdateUserViewModelType {
  userName: String = null
  firstName: String = null
  lastName: String = null
  phoneNumber: String = null
  displayLanguage: String = null
  targetLanguage: String = null
  sourceLanguage: String = null
}

enum TokenPurpose {
  EMAIL
  PHONE_NUMBER
  USER_LOGIN
}

