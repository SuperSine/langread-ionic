query getDocument($docId:String!){
  document{
    get(docId:$docId){
      document{
        docId,
        id,
        content,
        createDate,
        updateDate,
        title
      }
      smallWordTagInfo{
        wti{
          wordInfos{
            tag{
              id
              tagName
            }
            count
          }
          word
        }
        tags{
          id
          tagName
          tagColor
        }
      }
      bigWordTagInfo{
        tags{
          id
          tagName
          tagColor
        }
      }
      createTime
      updateTime
      status
    }
  }
}

query getDocuments($pageSize:Int!, $lastId:String, $keywords:String){
  document{
    list(limit:$pageSize,lastId:$lastId, keywords:$keywords){
      id,
      docId,
      title,
      content,
      createDate
    }
  }
}

query giveItToMe($content:String!){
  document{
    giveItToMe(content:$content){
      isCreator
      userId
			document{
        docId,
        id,
        content,
        createDate,
        updateDate,
        title,
        url,
        wordsCount
      }
      smallWordTagInfo{
        wti{
          wordInfos{
            tag{
              tagName
            }
            count
          }
          word
        }
        tags{
          tagName
          tagColor
        }
      }
      bigWordTagInfo{
        tags{
          tagName
          tagColor
        }
      }
      createTime
      updateTime
      status
    }
  }
}

query getStats{
  document{
    stats{
      documentCount
      tagCount
      tagWordCount
    }
  }
}

mutation removeTag($word:String!, $tagName:String!){
  wti{
    remove(word:$word, tagName:$tagName)
  }
}


mutation saveDocument($title:String!, $content:String!, $wordTagLiteStr:String!, $id:String, $docId:String, $url:String){
  doc{
    save(document:{
      title:$title,
      content:$content,
      id:$id,
      docId:$docId,
      url:$url
    }, wordTagLiteStr:$wordTagLiteStr){
      document{
      docId,
      id,
      content,
      createDate,
      updateDate,
      title,
      wordsCount,
      url
    }
    smallWordTagInfo{
      wti{
        wordInfos{
          tag{
            tagName
          }
          count
        }
        word
      }
      tags{
        tagName
        tagColor
      }
    }
    bigWordTagInfo{
      tags{
        tagName
        tagColor
      }
    }
    createTime
    updateTime
    status
    }
  }
}

mutation deleteDocument($docId:String!){
  doc{
    delete(docId:$docId)
  }
}



query getWordProfile($word:String!,$fromLang:String!, $toLang:String!){
  wti{
    profile(word:$word,fromLang:$fromLang, toLang:$toLang){
      word
      score
      wordInfo{
        tag{
          tagFont
          tagName
          tagColor
          id
        }
        count
      }
      entryResults{
        origin
        word
        phonetic
        meanings{
          definitions{
            description
            example
          }
          partOfSpeech
        }
      }
      translationResult{
        displaySource,
        translations{
          displayTarget,
          posTag
          confidence,
          backTranslations{
            normalizedText,
            displayTarget
          }
        }
      }
    }
  }
  timeline{
    wordByMonth(word:$word){
      data{
        total,
        yearMonth{
          year
          month
        }
      }
    }
  }  
}

query getTopmost($top: Int, $userId:String) {
  wti {
    topMost(top: $top, userId:$userId) {
      word
      score
      wordInfo {
        tag {
          tagFont
          tagName
          tagColor
        }
      }
    }
  }
}

query getTimeline($index:Int, $size:Int, $lastId:String, $keywords:String){
    timeline{
      get(index:$index,size:$size,lastId:$lastId,keywords:$keywords){
        words,
        wordTagInfo{
          wti{
            word,
            wordInfos{
              tag{
                id
                tagName,
                tagColor,
                tagFont
              }
            }
          }
        }
        lastId,
      }
    }
  }

mutation forkDoucment($docId:String!, $groupId:String, $wordTagLiteStr:String){
  doc{
    fork(docId:$docId, groupId:$groupId, wordTagLiteStr:$wordTagLiteStr){
      document{
        docId
        forkId
      }
    }
  }
}

mutation deleteAllCoreData{
	doc{
    deleteAllData
  }
}